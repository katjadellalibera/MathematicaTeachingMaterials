(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     60628,       1126]
NotebookOptionsPosition[     58471,       1082]
NotebookOutlinePosition[     58813,       1097]
CellTagsIndexPosition[     58770,       1094]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Translations from \
https://gist.github.com/viniciusmss/0b2256af8c746ae84995b021581eb6be \
\>", "Text",
 CellChangeTimes->{{3.7528992370430465`*^9, 
  3.7528992490259695`*^9}},ExpressionUUID->"6da88027-ee6c-4f0d-9b98-\
54af9c4f114c"],

Cell[CellGroupData[{

Cell["1.", "Subsubsection",
 CellChangeTimes->{{3.7528959508573217`*^9, 
  3.75289595106548*^9}},ExpressionUUID->"2b84452a-bbc4-4609-8fc5-\
7be4bbed03d5"],

Cell[TextData[{
 StyleBox["Write a function to check whether a number is a prime number or \
not.",
  FontWeight->"Bold"],
 "\nSolution in R:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
+Nn/fNr6LUVEf7vl2qHf/nfofOygSLylQvlSZPz2LxJ4mIYZ4CP7KAbuj5dN
nQvmKTr5MY8+1bYXlKOb/LP56GYykjDPjn/uEPPQ1O0fbjfZtP7dIp5VOY80
z+5p18QM9Dn+2HelUfPV/3+3/Xc638iBVZiwwzTMAB/ZthxmHk9bq7IbFAnz
FJ2imOfC4IUZ22bQrxTJDF4dFDm6pz07jeIcXvbmLTff+ec7N767cXh0ePEb
i2nqkr8vMdl0ZI4163I+/O+v9935faB5frDNiu9GBrwv935DFqLZaOZYKw98
KYMm5gk7TMMM8JFty2EvifCiTqBFWzHMU3TyYx5BYG3rrbNvjV8//pY/3iJe
SPRZ32ekGvqSJglr3dF6R1hOOQ2ROdayMA/VsEb6f/iVJtEMcc3DdZ9Yr3II
O0yT/Dz+tuVY+6OPKi1y3KWSFg+UkaKYx/+lsA1NEj9vO7HNYotlMQ9Vx/hX
C/MYZu1TSGIe2pAmQWLk/qRoHiWrOSgoRTHPvq59NWtruG7F33DMM+HJCUfO
HZEtZLHFwpmH8xZqIpBArM0T2bYcuT+IeYBCUczDniH5rP3HWm7neejNh2i2
WS/MoupVQvOUpZ3H2jz629y6nUdjHn3bsokG0c4DFIpinpJXkl9KO+7Gq2nb
P2n3flrzsthi6s+2WDjyoyv+sG2SmCfyNrd+tqUxD200rG3ZMPrCsy2gUBTz
eNdTcL/6r1f57SS162rnbJ9z6PND3Mk5oXm8kD+7fFMoObFNgvyMzMOxR9j7
reR9jtufR2MeTduyyf54Ue9QsHt5E8xTdHJonrJQJQk2LQ5T37ZsgsYtkS92
CQPmKTowjyAn2W6zJtZhJs+tinFbIBCYR6C8E61ScXmY2Y1VT+t9c6BcwDwy
VfKX1NlhIj8PCAPmAQC4B+YBALgH5gEAuAfmAQC4B+YxYWhkqOlQ05RNU7jv
dNx8iWm16B4/fpy76sk9ijs6OlauXNnT08NjNuWOfJEDzGVEg23+G9jxjtG8
YbGHMA+z58yeSRsmTd069cMLHyqTRsZGlu5dKo/aiGWetJ7/itSjcg5SMaJK
JM+Rs+hoRj2E7WchzFOWbp/Huo/N3TWXSoLLjTJZZAhPnbh9JGAeRmMekQjo
xZMvcvLVWKRVbEgyK1asoP+5dx8ZRu7mt+06ntTlWMmZXDg4qzPj78qY8L0V
Fmw6usnlC5gEgZ0t5SS9gQlsxcAfxc+R0pbXLAeWfMIVlPMfq18ozBPJiZ4T
kzdMvvWZW3sGeuIum2Inf3/Mw/UsdpoS83R3d5vXs3IIqUZok+M6v3wcRwJl
MU/YIN/I0f3ck6qlpUWZTWMefxdTWomY00T1scJ7mIfKkj/ns0wS8yTJuO5H
hAF0GyrvfRBvn+Eb1uKtWLwneRg/4k/KERi/xa1z8XWkmvKloUur315du66W
otyWD1p40LH8fgH63L3j7tMXT3tRSXqp0k0rlIcqK4Li0kVTT50/ddtzt9Ws
raE1c15NnrPpUFPze820J/IkQVgaokjzcFOYKGkmJ03vFsMg0zwWhXnCzCMK
lf9jOCI+YcZ1PZo2nFivAZWxGzaeOnIs50kJD5UQLm4DmjCPnG6lrqnu4OcH
vaD3C0zZNOXk+ZOpmKf1VOvMlpli2Xlt84ZHh3lOqsXLq13w2oKRsRH5AAML
ht484omGv+E30jxhJjdUinlhhnkYLmDpmidhxnUNmjacJGM845pHPGsLzJIh
N9QITJqeZKlyLPfKK68EHlSszIRsnvqW+lkvzGo73dY73EsxBl3Nre9v7Rvu
m719Nk3dc2bPWGlMvF9g+YHlYvHA2paheR5oe6BhZwNtkbZLqpn+3PQLgxd4
Tvo0djRe/uoyT5JDa01VXV9g5EErypyRta2wuNc8mDEszDAP4zePwLq2lSTv
sQbRwhw4NUlSi5zEPMI8QrBhOo21w3wd6U6f3z5feRGbmKR85IeYScwz8amJ
h88dVvaH5yT7kfe8oGKmOTp/C7MsE7nXgbKSyCqq3JIsz+ZvYQ7bN8M/BzAP
UyDziMoI5wMM7MAjcnaZt/Z4OTMPxTlCoSmah+KKA58dUCZxMrrszDN319yh
EfUqKHPGNU9YgVHq+Er1x7BxzD8a1zzmgXliURTz+DvwyEEO37P8YIu+10dH
fnJS2+IFZWeGdYm0ME/gJT5y7siEJyfM2DaDKkFhi5uYp+SVVr+92m+ewCdi
GZkn8PG3KIexmuX5NR9cUGGejMjCPNYZ18MI7MAj+vmIuon4Rp4tyQ47xvDZ
lmfVzhN4ibsHujnL7rJ9y8Le18aiuOulu3qHf9zc4NXBhp0N9P3GdzeOlkY3
H91cu642LfPYtfP4J8nScGAetPOYEPbkQi4q1uaxzrgehhzeyB14xOgJjgqU
nj/ZxTzZQbYURxr26lK7Z1uB5iG2vL9Feb+A8iiB6mjycyixnvUH18uL8Dyp
mMfi2VZgkZMrXBrz0JdymVQSeuPZVrpkah7PKuN6GMoNKJ41czAg36qeVA8y
CXjEU35Nn1j3iFYs//N0Jm4vTb15qKLU/kn7zJaZHLT4zTNWGms91Tp161TF
PH3DfY0djbRUXVPdw3se3t+1f9KGSamYx4vfnyfsb4fodRl4rYWIlIZrfQtz
oIjM/3hVuXmypkoSy5cFi7d0FQ67vl7lIlY+f5gna6oksbxj3I/bKhdyY0vO
wbitXFElieVdUm2RZCH+eGGseg6pksTyzkB+nryB/DwAgEIA8wAA3APzAADc
A/MAANyTN/NwXyY8CQKgssmbeZhCpLwGAFiTT/P4szgCACqJ3JonrcTpAIAc
AvMAANwD8wAA3JNP82C4AQCVTT7Nk9YbgQEA+SSf5mF49Cv8A0DlkU/zxEox
BAAoHPk0D1qYAahsYB4AgHtgHgCAe2AeAIB7YB4AgHvyaR6MVQegssmbeTg/
T/4z7QMAkpA38wAAqgGYBwDgHpgHAOAemAcA4B6YBwDgHpgHAOCe/JiHs4HV
B8Hva6b/5S/lJ+80Sen/I/dFDFwzBsIDUEbyYx4Zv0mULzmNhpCPiXmgGgDy
Q0HN493IGybCIZgHgAJRdPOwW2AeAIpFQc3DMhG/wjwAFItimSesidiihZmr
aQCAslAs8/CXSvNy4PyIeQDIM0U0j3dDLEImMA8AxaKg5vGu59OQn6oriTXI
OeIbmAeAvFFc88hhj+IW/a8AgLJTXPN4Pw17lGZkuQEZfZgByBv5NA8AoLKB
eQAA7oF5AADugXkAAO6BeQAA7oF5AADugXkAAO6BeQAA7tGYhzsJY1g3ACB1
ImMe9g/kAwBIEZPaVvN1HOwMAKBKMDTPqlWrhoaGHOwPAKAagHkAAO6BeQAA
7jExz+7du2EeAECKmJhHfr8MAAAkx7AnISddh38AAKlgGPMoWY4BACAJaGEG
ALgH5gEAuAfmAQC4B+YBALgH5gEAuAdj1QEA7jHJz4OB6gCAdEFOQgCAe2Ae
AIB7YB4AgHtgHgCAe2AeAIB7Ojs7S6VSufcCAFBdnD17tr+/v9x7AQCoLq5c
udLV1YWwBwDgkmvXrl28eJHkQ5EP/AMAcMP/AArq/Xc=
     "], {{0, 163}, {382, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{382, 163},
   PlotRange->{{0, 382}, {0, 163}}]], "Input",ExpressionUUID->
  "bbfeb39b-cc18-4e3a-9325-42c62f34b17d"],
 "\nSolution in Mathematica:\nThis is a built-in function"
}], "Text",
 CellChangeTimes->{{3.752895608701234*^9, 3.7528956266716013`*^9}, {
  3.752895657826722*^9, 
  3.752895695376695*^9}},ExpressionUUID->"695dd54e-8c59-4793-b799-\
d4a48728a0c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimeQ", "[", "13", "]"}]], "Input",
 CellChangeTimes->{{3.7528957615284443`*^9, 3.7528958094493136`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"9d4eebe6-75b5-4ca6-baf8-e526a7741cb0"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7528957892233353`*^9, 3.7528958164288335`*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"3dd9924d-0824-43d6-a57f-32a93a59f194"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PrimeQ", "[", "4", "]"}]], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"dc97ff69-74c6-4813-bd79-2121a1bc6351"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.7528957892233353`*^9, 3.752895813356186*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"bc162c38-e5b3-4bb9-ab51-bce8e0d11311"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2.", "Subsubsection",
 CellChangeTimes->{{3.752895956814143*^9, 
  3.7528959569517736`*^9}},ExpressionUUID->"d30ad342-716c-4e74-a49c-\
9596d822f7a0"],

Cell[TextData[{
 StyleBox["Write a function to check whether two given strings are an anagram",
  FontWeight->"Bold"],
 "\nSolution in R:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
NN0yabW9R18N2Qxdm6V2D/ZYm102T2azfn794e8//OS/PznmRS1Fel9behS0
EdC1/WuvfM3o+Se/98lzl861Tbnfxjm0GpR6M8urBhvhINFdVGvraHspoZC1
yX2JSM1Pcc00ppLsO7rP9PedB3eOdkWLt/dJfw7OMbRP2xGZqPKEKsXrQULx
cT3XmFo2dW1qPOPcvPesQwyqBkrcqKFx1IA6uxIkOvuhaZ0kT17bC76q79Qm
t6uEvMPptTnyQ6qItod6X9RXqvXvZH31c51RitTx5moToSNTHqZz8ULZ8QvH
7336XjK2eCs0W9tD/cu2dvLRJ0uS+2VyXA5aN+PceRc/MeTSiloOP0DxSa7n
nx/JX+9yGuFs4CDReV2+d22P1iYvIp7haG2GRlYptZno+t45MlSbJNf8NpXc
esfndJi31nq0zNhO/dALD7195e2v/udX7/zGnfc8fc/qq6s3mhv2gNd+99oj
Lz5y1zfvuuNv7/jY6sdeeeMV89OFyxfu//b93PRq/0xSJsFGaL69ijnFnNjc
UolDpw+d+M2JD3/nwyblT699+s1Lb5qfzJfmp8cOPPbif734/pX3m88f2f8R
cxjPc+hBn+IH29aLs2yhFJqu3okTpfotM4q22xqRf6bNXL52OSXxUH2tqLG5
Hc8G5v9m+Eoe0XlHdurdfDCPb/vZeTRTnw1d1GsVCY0lZnUEic5rXUNou1Kw
js92c8wLL7xgP+u1OWOh3p3hbrQ2vRWnjzSa2x1TN7fXJg02vM7eE2uTLhcS
sVBtth0lkrY/c/QZo7G22xolP/KrI+bXY+ePOctn5qeDvzzYi7Y/f+J587Cg
cz/z0meuvnPVKsl7/u49lBlr47149SK/QW+J6dpOa+VyiTOq7aFnZWK3miOf
e3Ii1lHblfpaUWNzK2YcRzx1Kwqvo5BvHEc9vNMHGdbBqkEoaAVdRbrkko6O
9bLStT3PiOTV9mPHju3ykRL9RKlNXeVa1SaXxGhtegWB75mhUQdVsV6bchbv
BGxKqc1GVWn99lvZr6zqLq4ufvy5j7/02kubVzfNENr03Gd//uz1d69//t8+
v23Ptudefe7au9fMn/lg/mmG8UaE7ekhm0yKtn/2pc/u+Jcd5ormuibZD33n
Q7/9n9+SkphsnLt0bv38ujmRHhmNakDTtZ073PZ6MldsMnKiTWkmDpn6NTgP
h2Jky7PJKG1V8SffqoXrB8tklYesMmEnD/OLlQWJbrsfwzLEuD1Um7rRu1Vt
SjuYcuNKmBWbPvl4p4vqtamPnBNrs1FDoOq1GTVNcGgyvvSvS0a9+U+hwTlJ
dNNN2+/+1t0/+fVPnBOtthudf+PiG5QHru3K3cmVTV7UfC1DzuJ1QxZPWbrx
5ySGFauWSrS9oxqsiOAmHbV9VnGQ6C7a3mM4QqU2dUXSa1P6qeuo7c0tKTDf
mwyvrq6aw2gwr9dmL9puhT2U7d613QybX379Ze9Pw2n7w99/+Mp1t4isttN8
v622h37yNhhn2To6q5V+2NLH7dB2+dNA43bFONBF25dqDRLdo7Z3tMn0/qSW
Vpfu43bKqqlHI+wmV/azXYPTa7O7tlvFUKbwvWs7F0/i9Yuvb/+H7fftu+/U
W6dCpydq+4/f+PF7//69jrZ7BWQgbfduVnRihyVaLLl5ENoeRbe3h9RA70RR
NeCXa6XtIRVarzVIdBN7Do5G9Emt2NsVC7bTv1ppuz4LM/MvO2I39Whrk9Q7
VJutmqWszaiwNwPY273abtTVaKzpzo/+8NGzF896T7dS8Kl//tTm1dsu9+zP
n7U284tXL/7szZ+9b+V9fMDfRdvz7O3erVDUbEbQ9srt7bYeQyvjluw9kPrw
SVkI413D2ScTUgNntYue6YnaHnoSbVQZJJoXVNt9MnaI3qPPAb02HQuzs08m
VJvOxhhnK060NpXN0tx8apMNTcZ54evartdmirDLq3Py9sl4td1w8JcH7/rm
XU6X57375ddf3rZnm1QDo+d3f+tu+t7ue+lF2zP2yXirmDcMRdv5FqxGTBIn
s09mUG0PPY51NWiYoi769renWGjtdDt93C4T52k6Ez2eeT4xdE5PUebF3CDR
shgTGVnbm3AR6bXpLHW1GrfLXPG8Ob1YDrBlVqPqGqpN/qYGR2ZeqU3dtCXR
td3w03M/ffCfHuQKz3v3uzfeff7E8x949gOOGtxobqy+unrP0/cYSf/E8584
8qsjZmzfi7Y37fe3K5sfbDpcQ3hDosO83zdp76UqGdg6hHbzVkj9D2JO2/6+
1Wg1JS+OXpuVz/17Yb56X95S18RwJteVI3ek18lcvPJcnJXqY8Ja9NrMs7zN
I/PS+5oJ+ZPpiP4WWG3MhSDM0WyoIPKFozpRanO+Zh/dmYvet3WetinMevLf
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
ibUpLUuyfLjFTykfmUJ0fzsl61QfP0wpVV096MQlEQvb2wycvIUskzoVFvtw
9DJXBWDe6WujXUcKzpS9+16qRa5edWF6BgpdvdP3VAMw7+hGm5GzUUpkVhAL
eyook6ZWS3sATIBSdlFOWZFxFr7rJM8aozMxbVdMgvA2ALYms9L+24uLzCZi
Yc85/G1iyTr8twf448JC9K90HgEAALQjKt3QdgAAmDug7QAAMD2g7QAAMD0c
6ZZeTMfU9uILfw6tlmkKOlDyoq9ARbF+G3p0lVyc9NZVoWeSjVuxNry/Yj0R
SKS2O5tIR9P2Vh5LOpLuwiW9g9em7U23IrXaXkNEwigptdmqKCrU9kZ9GQ37
AIGkEm0f+RXCqBpkvA1RSts3VJfs2U42pqTtbVtXKW3XX+TXBRzv7wAHR7rl
q7vjaPvIwhhVgwxPd+NrO3X2tbU13c9GRsass7VpaHvbqimi7bOEeNn6Q2rM
mS+on1bavvPgzoWvL9g/85m+33d030MvPHT67dP3f/t++6v5hn4y/zx0+hAd
fPnaZXOw+TMf7DdK3+Sei7zxKWicw0cs1De53yebvtdrk9Mj9K7N05Sh9E6e
PEk+mniaPNCG867oeizMdOg2zWebTooPq7Zdfght5w6sdPdT/DaV8kmpTV35
vbVJDYCy5ORWqc1ZLF526DYdQnUKywxIJF3bjUqTRB+/cPzep+8lebcCbr4x
35t/msNIzy9cvmAEnz8I7Lkk/k14kOxMMzdZPGjnXXJnnENPhFBUhWh/V0Iw
cOlYvwn/icfo4Te1urpKCTquAEheVnxRlaWbWZltXdvzZuu9a7sz5txggZv1
2tTLp4nVpjIFC9UmtR/u2JkXoFKbs3C87CatNr1HElFny/PiPwcMTbZNxsi1
EW0j3Y0YnFs9J/XmR9qD+T8V9266B2kZVGLxdve5SvfX1SA0hY+elfj4cNRJ
en3hcpRiT4j26Ax7kVfbnaCERIqTfOWJqdemXj5NQlG3bV16QDHvJfizeDEQ
L7tpUxGh8bk+qZySqwHQkWxt5xLtyLWj7XwYbw0yfBivtFUaPnljCjgtXwb7
U0aqeWqgG+Gdbpv++IiOxOS8Xh6ja3vG8sFA4/ZEO4Me3subsqLS3tbVKjpb
etXrdZFSm40aL1t3dVvnDh9QBKntThumA6xik73d/CVqO9fz4xeOf/AfP2hN
Nxa9NYbiQcvxD9fzgbRdH3Tp2s5NzY4ZNqpdIQs/MZy2HzhwIP2UKHz1xAmz
pdTmQNqu1GZU25XajNZFtDbX1XjZ0HaQSKK2W7nmC6Dp43Z+gF11pUSa5Nbo
jPpCalDnuH1DuFJPH7c7l/AKwmja3sUmw3G82uq1Wdu4Xa/NdIu3tzY30qLv
QdtBlESfA9yuYmml7fabH5z6gRF2/n3TJhgW78JeCy19E9V2vQuERnS6yCja
Lvt7nraH8jaEvX1oeH3ptRktH6U2ldalJKtru16brVYzvW1GfwrD3g4ScbTd
2TlABzgbY+xmyHRtl6dwQiOo9XA8aGcBS+6o0bVdD9kQWvWzZ/GfnH0yIW3n
q4FkZUrRdnOASdYJVtt23J63T+bMmTPLy8s9+hyYhQM367UZ1Xa9NkOtS6lN
Xdv12lTqQq/NFGGPlgb2yQAiUdubW0N32r7eatxOp/NVVEIZbCjxoJU9xilq
5sT8Td/fzvdUhybm8qb4jZgv08ftTj4dwVkUyPG5skFFoXdtb9Qw3Pr+/+i8
RqnN6KK2rM2ovV2pzZTnrPc2U+JlN+oUDPGgAWc0P5DSqsOpJHAzMZnxD/p7
U1/ryib7vQywBRlN282I3VlF5cj1qbL0G3S+IJN5SHWhttaVB/zJgFaMo+37
ju6jt1ZDyFdUyjIBQWi1SjttamtdGcDbAGjF0Npul1Cjwm6Za//ttdHRf/v0
qK11tWID/ttBSxALGwAAAAAAAAAAAAAAAMAkITdEWAUDAICJ4QQyAAAAMA1W
blI6FwAAAPqkQt99AAAAOgJtBwCA6QFtBwCA6THXr0gDAADwAkdPAAAwSShg
ARQeAACmATztAwDA9MBaKgAATA9oOwAATA9oOwAATA9oOwAATA9oOwAATAz4
gQQAgClB/tvhBBIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAaFy6dOnG
jRulcwEAAKBPzp49e+rUqZMAAAAmxB8BAAAAAAAA1fN/VI+5Jg==
     "], {{0, 141}, {500, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{500, 141},
   PlotRange->{{0, 500}, {0, 141}}]], "Input",ExpressionUUID->
  "4cd4591b-89a8-4dce-b41e-7fea8bf08e76"],
 "\nSolution in Mathematica:"
}], "Text",
 CellChangeTimes->{{3.7528959598310165`*^9, 3.7528959937276764`*^9}, {
  3.752899299402132*^9, 3.752899307467903*^9}, {3.752954739193452*^9, 
  3.7529547468670015`*^9}},ExpressionUUID->"d3e3fcb1-5635-4e8c-9601-\
11c50f72facb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"isAnagram", "[", 
   RowBox[{"s1_", ",", "s2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sort", "[", 
    RowBox[{"Characters", "[", "s1", "]"}], "]"}], "\[Equal]", 
   RowBox[{"Sort", "[", 
    RowBox[{"Characters", "[", "s2", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.752895996615256*^9, 3.752896000732907*^9}, {
  3.7529680661937857`*^9, 3.7529681851221385`*^9}, {3.7529682288224287`*^9, 
  3.7529682311359863`*^9}, {3.752968304450014*^9, 3.752968311168259*^9}, {
  3.752968343848456*^9, 3.752968349329261*^9}, {3.7529684059919996`*^9, 
  3.7529684095050592`*^9}, {3.7530500020225525`*^9, 3.753050041298366*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"28eb8cd8-949b-4c8d-8ba9-c0fe11426915"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3.", "Subsubsection",
 CellChangeTimes->{{3.7530536286876793`*^9, 
  3.753053631552355*^9}},ExpressionUUID->"51cb5d60-f7e6-421f-b083-\
3190c269f4a1"],

Cell[TextData[{
 StyleBox["Write a function that rotates a list by k elements. For example, \
[1,2,3,4,5,6] rotated by two becomes [3,4,5,6,1,2].",
  FontWeight->"Bold"],
 "\nSolution in R\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3W+IVdfd6PG59765L+7Agy8EXw33RZBQggQploZQL5GaiyUmz808EGis
LTVyp23StIH8KbGNLcnQFxOJpkmgQqNjn5ZoTEBsrRYnxKeTtJGYvhgHQx6l
Nc3UGKOpdZuaTO+6s3CxZv35rbXXOfvMnvH7QWTmzDn7rL32Wr/122uvfc7/
/Np9/3rPf+3r6/vuf1f//etXH/xf3/nOVx/+P/+ifhm897v/d+O9G77+v+99
YMPGDd/53Nf+m3rwf/yXvr4d6of//3MFAAAAAAAAAAAAAAAAAAAAAAAAAEDH
pqam7r777t27dwvPOX78+Jo1a9TT1JODTxgfH19+lfC0lhgZGTGlVT+3oTBy
/RdTx8U+HPo46h1/6KGHPvzwwx6Xxy+eKo8qVfCvqniqkI2WpKB+dFOP/TVG
9zLT6tRGcsqja0C/RKiontH1Eyu8zT92dqcLbsHsbM727SKpGqtbM/q9muj7
ZeWpZofQOQ9K1czxymzkvQkycjTI7F/BwsvVXtYsFVVUs+W64SJHQbX3Un6s
0MfOPDMn6CUTkiCnxjIlY8XIDOGvsQZWVh4U6DzL1YEiuIX8UNkzqki9TBiS
1dtcVqmPWt3j0p4st7ratOqOL5nK6qeTLDenlwWfk6yo7oqNUPkjl6rAYLgQ
tlCcTsTeS9BclltWHqPRggXFmnpm6O5lkMmJBvlN1CZUeydZbnM5TFm1NyG2
m5kHQldvsMBC0CvLcoX3Sr5K6JLCsZA3UlYeFMgZf2VCVG9blqt3tpeDSOfV
28n7xva0JcclJ3lTVddEgtfj+kk2A7k88yvLFQ5ZWRIiKxgsOk8mX3vttXvu
uefBBx/0414ng9f8ynJ7H2SS0aDrWW4xOctV7zg8PKya0N69e+tuuVWxvcMs
V0gemgh6BQlATttInn/FNtL7hOTa1JUsVzhn77DHqeKpoUSNKcVbcLbW45xz
rrJcOcbOoyy3oRPeHtdPshnI5ZlHWa68p01kuVXedIqtk6xGR6RnZgSz3ILy
dKVgZTrJcnsfZJLRYF5kuSqzve+++37961+r/wuy3FbF9k6yXPk5DQW9utcH
M9uGfAVH2Eij1yuvNfa6HftwmFHJrCMqWGTl/Ml+la1u75ucnFRxIDaUFIgN
wU5XdZ6mF97YO+W0SXtVmNmOvS7LZm9WXkhmP8FZ4phTHnmZhH8sistTzIlj
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
AAAAAKD9P63jZUU=
     "], {{0, 268}, {930, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{930, 268},
   PlotRange->{{0, 930}, {0, 268}}]], "Input",ExpressionUUID->
  "1676515c-a3f6-47d0-a1a3-92e3b0434877"],
 "\nSolution in Mathematica:\nThere are two built-in functions for rotations. \
RotateRight and RotateLeft, what we want is RotateLeft."
}], "Text",
 CellChangeTimes->{{3.7530027018178167`*^9, 3.7530027050750837`*^9}, {
  3.7530534612895613`*^9, 3.753053497252734*^9}, {3.7530536202260127`*^9, 
  3.7530536997570286`*^9}, {3.7530537298419704`*^9, 
  3.7530537319137917`*^9}},ExpressionUUID->"774b4855-330a-4215-863b-\
375fc48c4613"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RotateLeft", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.753088604572224*^9, 3.7530886290457354`*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"f1e00cb4-6242-4629-9573-1b519a8f0804"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "5", ",", "6", ",", "1", ",", "2"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7530886314223766`*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"3b33d5b6-7d7e-40a8-8e88-a0461bb8d6e2"]
}, Open  ]],

Cell[TextData[{
 "Write a function that computes the list of the first n Fibonacci \
numbers.The first two Fibonacci numbers are 1 and 1. The ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"n", "+", "1"}], ")"}], "st"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "59a27e0e-1c3c-426c-9634-5af876b968f6"],
 " Fibonacci number can be computed by adding the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "1cff89fe-0d81-4454-b34a-1b654c619a7d"],
 " and the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"n", "-", "1"}], ")"}], "th"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "30c277d1-8625-43de-a9b2-2da65bdb3874"],
 " Fibonacci number.The first few are therefore ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", ",", " ", "1", ",", " ", 
    RowBox[{
     RowBox[{"1", "+", "1"}], "=", "2"}], ",", " ", 
    RowBox[{
     RowBox[{"1", "+", "2"}], "=", "3"}], ",", " ", 
    RowBox[{
     RowBox[{"2", "+", "3"}], "=", "5"}], ",", " ", 
    RowBox[{
     RowBox[{"3", "+", "5"}], "=", "8"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "68bef918-0328-48e6-9b2f-2abb7b0f563a"],
 "\nSolution in R:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3Q9MVHe+93Gep2myaULuE25CQnKTufskhJjGuD7cLpv6mLVXIz6Xpug+
TjYmhahbJGWp1u3m8U/rtWKttNsiq02hXnerFdStotJytSKu46636FUftdsA
a9fKWq0UEQFxBovg8738Hs89PWfOmTN/zjDDvF9RMnPmnDNnhpkPvz/n/H7f
X7zsJ0v+a1pa2kvfkx8/WbTiqV/8YtGq//3f5I536UvPly4tee5/Lf1lSWnJ
L360+BFZeOS/pKXtkf//cfvBmAsXLvj9/gAApACVe+fPnx/vAwGAOCH3AKQa
cg9AqiH3AKQacg9AqiH3AKQa57nX2tqa+1BRUVFXV5f2UFVVlSzct2+ffn25
a1gNicPmtzleB7Ny5crbt2/HfOfy0uQFylM4XL9qTDTPKJ98eTkFBQXt7e3R
7AfucZh76pNpSDYNuZdc7H+bbpBPiE2suZd7ssOVY5zvWcJKIiviN0deC4mX
+Bzmnnxuww0xci9hRfDbjP4ZXSrOhXzeCF6pymHnRUTDM0ZZXEQcOM+9cD+3
5F4MHThwoLKyMla5Ef8UGpfcUyW3iOMrgk+vKl6Se4kvytxTNVzF8AFTudfR
0SE/1Qph1R30ezZsqD5d6iFznUK1rmi0wzZ/CwwvSjUEmZu8tAYibc/mb4S+
uczwsbfarXM1NTVLliyR6At3QytBf5vqOPVvtf4vl9yWTTo7O21+m/p3Xj2q
3vNcE+3Zbd438z71Kzg5nqAvUw5JNpGf2gcs6Ac7stouuZcs7HPPkCFWQRT0
D6v61mjLw6o7GP7avvfee1q4qa+n9tGSZ9FHn2FD/SffPvcMn3P9frTgUk9q
bjJS3yBtz61j9O9M0N06IU8hxTwJvVOnTjncxIb9bzNk7un/yhh+m+o90f8i
Dh06pP97ZF/eCxoXaqHht6DtxP54gr4cRYti/as2J1UEDYNWLwQJKCb1XKvc
M381nHyQ7D88huqzfmUnyWb1aNCyn/6roX9Ufwz2lSmb3YYkK68YE/O2gsjK
e/rfpmHlkI35EeSeeZ/6cLM/HptDUr8v/XNZHVsEDTXkXrJwNffMp7s4/CCp
EpTVX2HDcu3Ygj6jk9wzf2v0TxQyEKxelP1u7XV0dCxbtiyGbXp6keWeue6v
L8fa/0WLIPfMnxb9k9ofj3kFTcjmDk0EPbPRtCginuKZe2H9ATU3FgW+21Zm
bi+KOPesmqGc5J7NO2O/W3uqTc8q91QqLnko3DJhbHPPSZhHlnuGTfR10kTL
PbXbcemzRgTiXN6LrMFEi76wqsCBKMp7ejEs74VF1XMl3yTlItuDlWQp7wXN
Pcp7iF7ccs+qATkkw5fC5kgMH1TDn2DDQepb7ezj1P47ZdNfE31rT2z7NTRO
cs/QrWCfM4beJTP7or7z9j1tScjcs2/fc5J7tO9NYHHLPeeNe7KOrKw9l6FL
1Nwurd9Qi1Z1u6ysTDts86O5phMqgpbN7HPP3JWp78+NyZUR8TmPRd/xpBWz
HeaeuqtfwdCfa/8+2PTnBv31hTyeoEsUh7lHf+7EFk3uBW1tM3R0GprgHB6V
YVtDopqf13DeiHaGg+Gw9btV5+NZPao/R8JJHUp/tqHhY2+127DE57xl/Rsr
r1HeIoe5F/juSZVBI07fYKvvRje3fxrOAQi6z5DHY/UyHeZeZDVWci9ZTOzx
WMbr8igkgmiutI3sk0PuJQtyDxOYfAAiKGBzfe6ER+5hAjP0zjgR5XgsIbt4
kAjin3tWZ7UFbRyLErkH7fJqh+tHX2Dbx/h7CW9il/cAwIzcA5BqyD0AqYbc
A5BqyL04iHL+CNUp6byHkVMpAHvkXhxEmXvhjlYa5ZkYwIRH7iW4yM4Hi+bM
W2DCI/cSWTQjWYVbSgRSh0u5p76w+oKKeUnM2U8AZHNBuroAX41cJDc6OzvV
5fD6VjKrGXC08Y60S+z1Txpy3hz7WYeCDoVk/zI11HYBK+6V9wwDRkV2pWRY
7CcAss89NVKfmv2trKxs3xj9aCSG4Vm016Ulm9WsQwHry9XVttpy2fPOnTtD
bmX/Mg2bc7kKYOZqPVdrZQqruenAgQNLTJwMOxzuBED63FPDHOn3oGWd/ZiW
5pHlzIU0m/HlbDperYZCsn+ZehGMnAmkArfb97TaXxzOrLAfKC9keU+LOG0G
B7XQPHKvfldOIj1oxIUc4c1qxGDnY6pHMFI6kArczj3zSLzucSn39llMOxtl
7oUMJXIPcImruae+7+VjnDc0RVnPjUN5T4/yHpB0XM09fXQEHXs8tsLKPX0r
mX3u2QdUxLkXcqIl+/Y9J7lH+x4QlHu5Z8i6uPXnWgWCzbxC9rlnf/AR517g
4UBt+tl5nPfnhsw9+nMBKy7lniqrmGd+icP5ezaBYDWvUMjcC3x3Wpxc00Rs
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
2r/Tq+4HYpd76vvivD/XSe6F25+rz7qk7s8NOWvVhM89w68vPv25TkIvQO5Z
n793+87tqn+r+vtNf6/OUfnJnp98dv0z9VDI3AtYfKoNlwcqTk5vcy/3DNMD
Ba3hRlPeC+srZr4uyfn5e/qLTzXm71R8PvDmw3Z+/p7+RMSwLqe1qpUH7aCP
Q+6ZL8Z0fv6e/jRX5+e7mhs/rdolyD2XMA1iwJ1PF9drRG8CX6/hUOJ8DKwk
ae4FvltlS0Fcn2uP3CP3bCRv7gWimFBsAhiX8VhCSpwPPLlH7tlI6txL2Vly
2sdp/D0rCTjwWvxHw0u68fcmwDNGLKlzDwAiQO4BSDXkHoBUQ+4BSDXknplq
nnXeKqvGCHX1kADEUMLm3kdtH/34tz/e0rolzs8bwXlx7S6M9w7APQmbey5N
zBFSZOfFhXudLIBxRO7pRXO+pUsnEgOIOfdyTw0uKj+v3Lzyj9v/UW7/oOYH
Z6+eVY/6A37fX3xqPnH5N/uD2WpcAm2wZcO/nC05f+35a89Az5ydc/ST8OqH
MJUVZDX519nTWXu69m82/s1jGx7752P/rAZtVmtu8G2o+reqjDcyHln3iDyp
HJv+mIOeaR9yAheF2i6QLNzOvdeOvzb/d/O1+Prh1h/euH1DHm34vEFCyTAO
1ZmrZ2KSex/83w+0nUu+vX/ufW3N7732Pf1uF+5feOfuHbUr+/ErbCZwUVy6
YBZAzLmde4W7Cqdtm9bR1dHa2SqBlvmrzHNfnfum75sZ78+Qu03tTXf9d28N
3JJSmaz80icvaZsHrec6yb3vV39/5vaZv/rjr/oG+0obS+XRso/LtDXl3+ID
i7v7uz/87EPJQBWnalc2A7LZT+CiGcdrQgE453buSXGr/ny94SGrQp1+5PmI
c0/uTv/NdFWqNB+P1G0ldbVj0OeefWrZTOCiiXgoSwDx5Hbu/aDmB1/d+srw
kP0sk2qdaHKv5nSN1fFokxmFm3sB6wlcNOQekBTczj19lGnU/BpBI1HjJPf8
Af8rLa+Yc09LRfPxRJx7NhO46Nch94DENy6519nTOemdSVIFXnZomblCqqjc
W9K45Pad/2xJuzVwq6CuQJb/6o+/GvQPvn3y7UcrHo1V7tmklv0ELhra94Ck
MC65J6o/rZbcM9Rz9XkldVVzf64sf+34a/rlqn82Jrln1Z8bcgIX/Wr05wKJ
b7xyT6qoDZ83/MN7/6AKbObck2LeBt+GrLeyDLn3Td83iw8slq0e2/BYeVP5
4Y7DGW9kxCT3Ahbn74WcwEVJ/DFmASgJe73GuIjm3OMEGV0cQEjknkFkc3Zw
fS6QRMg9A/uei6C4Qg1ILuSeGePvARMbuQcg1ZB7AFINuQcg1ZB7AFJNyNzT
xiGhvxLAxOCwvMepGgAmDOf1XM7WADAxhJV7XIcFYAIg9wCkGnIPQKpxnnv7
9u0j9wBMAM5zjyFHAEwMYZ23rMYqIf0AJLWwyntMmgNgAqBfA0CqIfcApBpy
D0CqIfcApBpyD0CqYTwWAKnG+fh7DMYCYGJgvGUAqYbcA5BqyD0AqYbcA5Bq
yD0AqYbcA5BqyD0AqYbcA5BqyD0AqYbcA5BqyD0AqYbcA5BqyD0AqYbcA5Bq
yD0AqYbcA5BqyD0AqYbcA5BqyD0AqYbcA5BqyD0AqYbcA5BqyD0AqYbcA5Bq
yD0AqcZ57rW2tuY+VFRU1NXVpT1UVVUlC/ft26dfX+4aVoMNebtWrlx5+/bt
6HclvyneecCGw9xToWdINg25FyX19srPmOxNwnPlmJikKDDxOMw9SbZwQ4zc
c6i9vb2goCDo35SOjo5lY+SG4aEDBw4seaimpsbwqLzt8ubLb82lYwaSmvPc
C7f8QO45FPS9lbuVY3bv3m3OPQk6baHKRnP0xbYMCUwkUeaequEqhq+Yyj35
VspPtYJVNdnqGbU9GzZU9Tj1kJSUpLxkeN5cHe2wVbFKf5CGF6XKSOYGTLVc
NtT2bM5zfeOnoZRltVvFfFSK5JiU6AJj5TpD7qmgO3XqlLZEbpuzkdouYMU+
9wwZYhVEQb+8Kve05WEVPwzV6vfee08LN0MNTp5FH32GDfXJZp97hsqmfj9a
cKknNeeJimhtz61j9O9M0N3q3yWbUrE592TJihUrtE1UyVBquyon9QxvDgAl
JvVcq9zTp4Hz4oda06ptyhAU+pWdJJvVo0HLfiqv1G39o/pjsCqwmZ/CsNuQ
r1Qx554UBSXo1D5lh5KBUheWJeaqrv2xASnL1dwzn+7isMVPlaDMgRA0KLRj
C/qMTnLPEEeGJzI/qn8imwKb/W6DrmBmk3ta9VYV+ax6N8JqXgBSQTxzL6ye
Dn0VW/vm6tvKzI14Eeeeesi8Wye5Z/PO2O826J7NrHJPynhabZfcA8IS5/Je
uM3sWheG+vKGVQUORFHe04theS/cFQIW7XtLlizRqrqBh7Vdc/seuQcEFbfc
i/iMMkPW2RyJHIC+GV8dlVXu6Vvt7OPUPvds+mtCNt9F1r7nsD/X/JIBKHHL
PeeNe7KOrKw9l6FLVN0NmhX6aFW3y8rKtMM2P6o/y8XmghT73FPZpc9bfX+u
/XUu5nfJzJx7gbGqrlbJVTFoLuwF6M8FLESTe0Fb2wwdnebz6JwwbGtIVPPz
Gs4byX14Xp/hsPW7VefjWT2aqzsz0D73tPfH3Hxnv1v9o+Yimf5yDI2+bivR
py0PGnpOCpNAaprY47FE0KIYfxFcA+iEodYPQEPujTubmnvEuD4XsEHuJYKQ
zYBh4Qo1wF78c8/qrLagjWNRSpbcCzD+HhBHE7u8BwBm5B6AVEPuAUg15B6A
VKNy78KFC36/f7yPBQDiQeXepUuXbt68Od7HAgDxoHKvt7e3o6ODIh+AVPDg
oevXr0v0SamP9AMwsT3QkVKfVHgvXLhwHgAmrgcAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAxtXw8HBlZWVFRUUE27a1tRUUFHR0dMT8qADAJUNDQ5s3b05PT48g
99rb22fPnj1lyhRyD0BSGB0dvXz5cnFxcdqYsHLP7/fv3LkzJydHNiT3ACSL
np6e/Px8yS5JsJKSkrByr66uThJv8eLF+/fvJ/cAJIve3t41a9ZcuXJFCm+l
paVh5d6BAwd27doldeSTJ0+SewCSTgS5pyH3ACQjcg9AqiH3AKQacg9AqiH3
AKQacg9AqjHnnqRZWlpaXV1dyG3JPQDJiNwDAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAGo6Oj586dW7BgQUZGRnp6utfrlbuyMKydMG84gCTi8/k8Ho/kXtMY
yT25Kwud74F5wwEkkcHBwYULF5aUlMgNtaS/v7+4uFgWaktsMG84gKRz5cqV
/Pz8HTt26Be+8847srCnpyfk5swbDmACGBoaWrp06fz58/v6+kKuzLzhACYA
1dy3bdu2sLYi9wAkqbNnz+bl5ZWVlTlp3NMj9wAkndHR0ePHj+fk5JSUlNy6
dSvczck9AMllZGSkvr4+IyNj9erV4Zb0FHIPQBIZHh7esmVLZmam/JTbke2E
3AOQLKR6KyU9CT35Ge41GnrkHoBkceXKlWnTpuXl5VVUVFTq1NTU3Llzh/lz
AUw8jY2NacGo85bJPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8NlnnxUXF6en
p3s8npdffrm7u9vhhoODg9XV1VOnTk1LS8vJyZHbkQ1bCgDx1NbWlpeX5/V6
m5qatm/f/sQTTxQWFnZ1dYXcUCKurKxM4q6qqur48ePyU2Izgrk5ACCe7t27
t3z58meeeeabb75RSy5evDhp0qQ9e/aE3LalpUWC7tixY9qSI0eOZGZmynK3
DhcAotbb27to0aLNmzdrSzo7O5988kknY+5t2bJlzpw5+krxV199NX36dCfb
AkAiGB0dvXbt2i9/+Uup9l66dCmCPZw+fTorK6uxsTHmxwYAMdfT05Ofn5+W
lvb444+3trZGsAfV3Ddr1qyvv/465ocHADEnudfS0rJ///65c+d6PB6fzxfW
5n6//9VXX41gQwAYd/39/cXFxfPmzevt7XW4ycDAwAsvvCChd+jQoWgmZQOA
8bJjxw7nkwRdu3bN6/XK+p9++qnbBwYA0bt8+fKsWbMaGhr0C2tra3Nzc7/4
4ouQm1+6dGn2mMj6QQAg/vr6+ubPny8VW6neqiVdXV2FhYULFy4MefqxWtPh
Sc4AkDh8Pp/H41mwYEFTU9PevXvz8/Pz8vLa2toejM2KazV/7ujoaHV1tTxa
Wlpa+V2RdQcDQNxIgp07d87r9arrc5cvX37lyhX1kE3uqYJi0DnHOW8ZAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAIAJ6cyZMx6P5+TJkw7X9/v9NTU1kydPTktL
mzlz5tGjR0dGRlw9QgCIITWeniSYw9wbHh6urKyUnKyqqmpubi4vL8/MzKyv
r2eoeQBJQUJs/fr1U6dOzcrKcph7Z8+elZW1UadkD6tXry4oKHA+MQcAjBcp
oUk57Zlnnjl+/PiUKVMc5t7Bgwdlk87OTm2JFPzy8/N7enpcO1IAiI22trYZ
M2b4fL6Ojg7nuad37969w4cPy7Zvvvnm/fv33ThIAIgVqZZ6vd7q6mop9UWW
e1LVVSMtr1y5MuSsHAAwvlTfRFlZmcqryHLv1KlTLS0tGzdu9Hg82q4AIDEd
OXLkRz/6kZpF6EGkuaffW3p6umFWSgBIHH6/v7S0NOjcQM7nDdfr7u6eNWtW
RUWFG0cLANG7f//++fPnj+vU1dVlZ2e/++67f/zjHwcGBuw337Rpk9fr1Z+1
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
     "], {{0, 441}, {424, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{289., Automatic},
   ImageSizeRaw->{424, 441},
   PlotRange->{{0, 424}, {0, 441}}]], "Input",ExpressionUUID->
  "53ae88ed-7cf8-469f-a379-99c560b501a4"],
 "\nSolution in Mathematica:\nFibonacci is already a function in Mathematica \
so all we have to do is create a function that returns a  list of the first n \
fibonacci numbers"
}], "Text",
 CellChangeTimes->{{3.7530894327470026`*^9, 3.753089554182988*^9}, {
  3.7530895901931763`*^9, 3.753089601279511*^9}, {3.753089667228119*^9, 
  3.753089739496771*^9}},ExpressionUUID->"7bfcbc78-08e2-47cc-9aef-\
17dbb3cb2494"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fibSequence", "[", "n_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Fibonacci", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.753089680109685*^9, 3.753089691308683*^9}, {
  3.753089743215787*^9, 3.7530898010171194`*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"c9608c11-a2e0-4267-bcd6-71e71a16f98c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fibSequence", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.7530897924281406`*^9, 3.753089811608805*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"cd982e8b-3783-4df7-b10b-d5025342adf0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "3", ",", "5", ",", "8", ",", "13", ",", "21",
    ",", "34", ",", "55"}], "}"}]], "Output",
 CellChangeTimes->{3.753089812463523*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"7c5ff29c-1572-4118-957b-3805d5318e46"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{680, 781},
WindowMargins->{{Automatic, 30}, {Automatic, 10}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 243, 6, 34, "Text",ExpressionUUID->"6da88027-ee6c-4f0d-9b98-54af9c4f114c"],
Cell[CellGroupData[{
Cell[826, 30, 154, 3, 44, "Subsubsection",ExpressionUUID->"2b84452a-bbc4-4609-8fc5-7be4bbed03d5"],
Cell[983, 35, 8133, 142, 263, "Text",ExpressionUUID->"695dd54e-8c59-4793-b799-d4a48728a0c3"],
Cell[CellGroupData[{
Cell[9141, 181, 209, 3, 28, "Input",ExpressionUUID->"9d4eebe6-75b5-4ca6-baf8-e526a7741cb0"],
Cell[9353, 186, 180, 2, 32, "Output",ExpressionUUID->"3dd9924d-0824-43d6-a57f-32a93a59f194"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9570, 193, 138, 2, 28, "Input",ExpressionUUID->"dc97ff69-74c6-4813-bd79-2121a1bc6351"],
Cell[9711, 197, 179, 2, 32, "Output",ExpressionUUID->"bc162c38-e5b3-4bb9-ab51-bce8e0d11311"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9939, 205, 155, 3, 44, "Subsubsection",ExpressionUUID->"d30ad342-716c-4e74-a49c-9596d822f7a0"],
Cell[10097, 210, 10415, 178, 219, "Text",ExpressionUUID->"d3e3fcb1-5635-4e8c-9601-11c50f72facb"],
Cell[20515, 390, 739, 15, 28, "Input",ExpressionUUID->"28eb8cd8-949b-4c8d-8ba9-c0fe11426915"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21291, 410, 155, 3, 44, "Subsubsection",ExpressionUUID->"51cb5d60-f7e6-421f-b083-3190c269f4a1"],
Cell[21449, 415, 18585, 312, 290, "Text",ExpressionUUID->"774b4855-330a-4215-863b-375fc48c4613"],
Cell[CellGroupData[{
Cell[40059, 731, 330, 8, 28, "Input",ExpressionUUID->"f1e00cb4-6242-4629-9573-1b519a8f0804"],
Cell[40392, 741, 243, 6, 32, "Output",ExpressionUUID->"3b33d5b6-7d7e-40a8-8e88-a0461bb8d6e2"]
}, Open  ]],
Cell[40650, 750, 16813, 298, 486, "Text",ExpressionUUID->"7bfcbc78-08e2-47cc-9aef-17dbb3cb2494"],
Cell[57466, 1050, 444, 11, 28, "Input",ExpressionUUID->"c9608c11-a2e0-4267-bcd6-71e71a16f98c"],
Cell[CellGroupData[{
Cell[57935, 1065, 216, 4, 28, "Input",ExpressionUUID->"cd982e8b-3783-4df7-b10b-d5025342adf0"],
Cell[58154, 1071, 289, 7, 32, "Output",ExpressionUUID->"7c5ff29c-1572-4118-957b-3805d5318e46"]
}, Open  ]]
}, Open  ]]
}
]
*)

